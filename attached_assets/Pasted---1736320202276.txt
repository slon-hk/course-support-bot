Проблема, которую вы описываете, связана с тем, что после успешной авторизации пользователь снова перенаправляется на страницу авторизации. Это может быть вызвано несколькими причинами. Давайте рассмотрим возможные причины и решения:

1. **Проблема с сессией**:
   - Убедитесь, что сессия правильно устанавливается и сохраняется после авторизации. В логах видно, что сессия создается, но возможно, она не сохраняется должным образом.

2. **Проблема с маршрутизацией**:
   - Проверьте, правильно ли настроены маршруты и декораторы для проверки авторизации. Возможно, маршрут `/` требует авторизации, и пользователь снова перенаправляется на страницу авторизации.

3. **Проблема с декоратором `@login_required`**:
   - Убедитесь, что декоратор `@login_required` правильно настроен и используется. Возможно, он не распознает пользователя как авторизованного.

4. **Проблема с перенаправлением**:
   - Проверьте, правильно ли настроено перенаправление после успешной авторизации. Возможно, перенаправление на `/` вызывает повторную проверку авторизации.

Вот пример кода, который может помочь вам диагностировать и исправить проблему:

```python
from flask import Flask, redirect, url_for, session, request
from flask_login import LoginManager, login_user, login_required, current_user

app = Flask(__name__)
app.secret_key = 'your_secret_key'

login_manager = LoginManager()
login_manager.init_app(app)

@login_manager.user_loader
def load_user(user_id):
    # Ваша логика для загрузки пользователя по user_id
    pass

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        # Ваша логика для проверки учетных данных
        user = authenticate_user(request.form['username'], request.form['password'])
        if user:
            login_user(user)
            app.logger.debug(f"[LOGIN] User authenticated: {current_user.is_authenticated}")
            app.logger.debug(f"[LOGIN] User active: {current_user.is_active}")
            app.logger.debug(f"[LOGIN] Session data: {session}")
            return redirect(url_for('index'))
    return render_template('login.html')

@app.route('/')
@login_required
def index():
    return 'Welcome to the index page!'

if __name__ == '__main__':
    app.run(debug=True)
```

### Проверки:
1. **Сессия**:
   - Убедитесь, что сессия правильно устанавливается и сохраняется.
   - Проверьте, что `app.secret_key` установлен.

2. **Маршруты и декораторы**:
   - Убедитесь, что маршрут `/` требует авторизации с помощью `@login_required`.
   - Проверьте, что `login_user(user)` вызывается правильно и пользователь действительно авторизован.

3. **Перенаправление**:
   - Убедитесь, что перенаправление после успешной авторизации выполняется правильно.

Если проблема сохраняется, предоставьте больше информации о вашем коде и конфигурации, чтобы можно было дать более точные рекомендации.